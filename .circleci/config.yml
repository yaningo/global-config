version: 2.1

commands:
  dispatch:
    parameters:
      force-update:
        type: boolean
        default: false
      skip-build-on-targets:
        type: boolean
        default: true
      config-to-deploy:
        description: Path to the configuration file to be deployed to all targets [REQUIRED]
        type: string
      targets-list:
        description: "Path to file containing the list of repo and branch targets. Format : org/repo, branch (1 target per line) [REQUIRED]"
        type: string
        
    steps:
      - run:
          name: Checking environment variables and parameters
          environment:
            SKIP: "<<parameters.skip-build-on-targets>>"
            CENTRAL_CONFIG: "<<parameters.config-to-deploy>>"
          command: |
            CheckEnvVars() {
                        if [ -z "${GH_TOKEN:-}" ]; then
                            echo "In order to use the Config dispatcher orb, an OAuth token must be present via the GH_TOKEN environment variable."
                            echo "See instructions in the GitHub documentation: https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-tokenp"
                            exit 1
                        fi
            }

            NotThisConfig() {
                        if [ $(git hash-object ${CENTRAL_CONFIG}) = $(git hash-object $HOME/project/.circleci/config.yml) ]; then
                            echo "The configuratio file you're deploying can't be the same as this build's confguration file"
                            echo "Check the content of the configuratio file you're trying to deploy"
                            exit 1
                        fi
            }

            
                        if [ "$SKIP" = "true" ]; then
                            echo "As per your parameters, build will be skipped on target projects upon the configuration deployment"
                            echo ' export MESSAGE="Global config update [skip ci]" ' >> BASH_ENV
                         else
                            echo "As per your parameters, the global config update will trigger a build in the target project(s)"
                            echo ' export MESSAGE="Global config update" ' >> BASH_ENV
                        fi
            
            
            echo "$SKIP"
            echo "${SKIP}"

            CheckEnvVars
            NotThisConfig
            
      - run:
          name: Deploying configuration to targets
          environment:
            CENTRAL_CONFIG: "<<parameters.config-to-deploy>>"
            TARGET_LIST: "<<parameters.targets-list>>"
            FORCE: "<<parameters.force-update>>"
          command: |
            DeployConf() {
                        GLOBAL_64="$(cat "${CENTRAL_CONFIG}" | base64 -w 0)"
                        while read -r target
                          do
                            REPO=$(echo $target | awk -F', ' '{print $1}')
                            BRANCH=$(echo $target | awk -F', ' '{print $2}')
                            if [ "$(curl -s -w '%{response_code}' --output /dev/null --location --request GET "https://api.github.com/repos/$REPO/contents/.circleci/config.yml?ref=$BRANCH" --header "Authorization: token $GH_TOKEN" --header "Accept: application/vnd.github.v3+json")" = "404" ]; then
                              curl -X PUT https://api.github.com/repos/$REPO/contents/.circleci/config.yml -H "Authorization: token $GH_TOKEN" -H 'Accept: application/vnd.github.v3+json' -d '{"message":"'"$MESSAGE"'","content":"'"$GLOBAL_64"'","branch":"'"${BRANCH}"'"}'
                            else
                              BLOB_SHA=$(curl --location --request GET "https://api.github.com/repos/${REPO}/contents/.circleci/config.yml?ref=${BRANCH}" --header "Authorization: token ${GH_TOKEN}" --header "Accept: application/vnd.github.v3+json"|jq -r .sha)
                              if [ ! "$(git hash-object "${CENTRAL_CONFIG}")" = "$BLOB_SHA" ] || [ "${FORCE}" = "true" ]; then
                                curl -X PUT https://api.github.com/repos/$REPO/contents/.circleci/config.yml --header "Authorization: token ${GH_TOKEN}" --header "Accept: application/vnd.github.v3+json" --data-raw '{"message":"'"$MESSAGE"'","content":"'"${GLOBAL_64}"'","sha": "'"$BLOB_SHA"'","branch":"'"$BRANCH"'"}'
                              else
                                echo "Not pushing same version of the config file"
                              fi
                            fi  
                          done < ${TARGET_LIST}
            }
            
            DeployConf
jobs:
  # config-validation:
  #   parameters:
  #     config-to-deploy:
  #       description: Path to the configuration file to be deployed to all targets [REQUIRED]
  #       type: string
  #   docker:
  #     - image: circleci/python
  #   steps:
  #     - checkout
  #     - run:
  #         name: Check global config validity
  #         command: |
  #             circleci config validate << parameters.config-to-deploy >>
    
  deploy-config:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - dispatch:
          config-to-deploy: global-ci.yml
          targets-list: satellites.txt
      - run:
          name: Get commit info
          command: |
            echo << pipeline.git.revision >>
            # curl --location --request GET "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commits" --header "Authorization: token ${GH_TOKEN}" --header "Accept: application/vnd.github.v3+json" -d "sha: << pipeline.git.revision >>"
            git log  -n 1
          
workflows:
  main:
    jobs:
      # - config-validation:
      #     config-to-deploy: global-ci.yml
      - deploy-config
          # requires:
            # - config-validation
